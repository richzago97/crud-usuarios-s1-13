{
   "openapi": "3.1.0",
   "info": {
      "title": "API de CRUD de usuários + Permissão de Administrador",
      "description": "O objetivo do projeto é fornecer um serviço de CRUD (Create, Read, Update, Delete) para gerenciar usuários, com a adição de funcionalidades de permissão de administrador. A aplicação não utiliza um banco de dados tradicional, mas sim um array vazio para armazenar os dados dos usuários em memória.",
      "version": "1.0.0"
   },

   "paths": {
      "/users": {
         "post": {
            "summary": "Criação do Usuário",
            "description": "Essa rota será responsável por cadastrar um novo usuário",
            "tags": ["Users"],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/User"
                     },
                     "examples": {
                        "user": {
                           "value": {
                              "name": "Richard",
                              "email": "richard@email.com",
                              "password": "123456",
                              "isAdm": true
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "400": {
                  "description": "E-mail already registered"
               },
               "201": {
                  "description": "Created",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/User"
                        }
                     }
                  }
               }
            }
         },
         "get": {
            "description": "Listar Usuários",
            "summary": "Lista todos os usuários existentes, se o token fornecido for adm.",
            "tags": ["Users"],
            "security": [
               {
                  "bearerAuth": []
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/User"
                           }
                        }
                     }
                  }
               },
               "401": {
                  "description": "Missing authorization headers or Unauthorized."
               }
            }
         }
      },
      "/users/profile": {
         "get": {
            "description": "Listar Perfil",
            "summary": "Lista o perfil do usuário autenticado",
            "tags": ["Users"],
            "security": [
               {
                  "bearerAuth": []
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/User"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Missing authorization headers or Unauthorized."
               }
            }
         }
      },
      "/users/{uuid}": {
         "patch": {
            "description": "Atualização do Usuário",
            "summary": "Essa rota irá atualizar o usuário através do UUID",
            "tags": ["Users"],
            "security": [
               {
                  "bearerAuth": []
               }
            ],
            "parameters": [
               {
                  "name": "uuid",
                  "in": "path",
                  "description": "ID do profile para busca",
                  "required": true
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/User"
                     },
                     "examples": {
                        "user": {
                           "value": {
                              "name": "Richard Atualizado",
                              "email": "richard2@email.com",
                              "password": "12345678",
                              "isAdm": false
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "$ref": "#/components/schemas/User"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Missing authorization headers or Unauthorized."
               }
            }
         },
         "delete": {
            "description": "Deleção do Usuário",
            "summary": "Essa rota irá deletar o usuário através do UUID caso o usuário for adm",
            "tags": ["Users"],
            "security": [
               {
                  "bearerAuth": []
               }
            ],

            "parameters": [
               {
                  "name": "uuid",
                  "in": "path",
                  "description": "ID do profile para busca",
                  "required": true
               }
            ],
            "responses": {
               "204": {
                  "description": "User deleted with sucess"
               },
               "401": {
                  "description": "Missing authorization headers, Unauthorized"
               },
               "404": {
                  "description": "User not found"
               }
            }
         }
      },
      "/login": {
         "post": {
            "summary": "Login",
            "description": "Essa rota será responsável por fazer o login do usuário criado, gerando um token",
            "tags": ["Login"],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Login"
                     },
                     "examples": {
                        "login": {
                           "value": {
                              "email": "richard@email.com",
                              "password": "123456"
                           }
                        }
                     }
                  }
               }
            },
            "responses": {
               "401": {
                  "description": "Wrong email/password"
               },
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "token": {
                                 "type": "string"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "User": {
            "type": "object",
            "properties": {
               "name": {
                  "type": "string"
               },
               "email": {
                  "type": "string"
               },
               "password": {
                  "type": "string"
               },
               "isAdm": {
                  "type": "boolean"
               },
               "uuid": {
                  "type": "string"
               },
               "createdOn": {
                  "type": "Date",
                  "format": "date-time"
               },
               "updatedOn": {
                  "type": "Date",
                  "format": "date-time"
               }
            }
         },
         "Login": {
            "type": "object",
            "properties": {
               "email": {
                  "type": "string"
               },
               "password": {
                  "type": "string"
               }
            }
         }
      },
      "securitySchemes": {
         "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
         }
      }
   }
}
